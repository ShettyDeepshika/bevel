apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: supplychain-orderer1
  namespace: supplychain
  annotations:
    fluxcd.io/automated: "false"
spec:
  interval: 1m
  releaseName: supplychain-orderer1
  chart:
    spec:
      interval: 1m
      sourceRef:
        kind: GitRepository
        name: flux-local
        namespace: flux-local
      chart: platforms/hyperledger-fabric/charts/orderernode
  values:
    metadata:
      namespace: supplychain
      images:
        orderer: hyperledger/fabric-orderer:2.2.2
        alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
    orderer:
      name: orderer1
      loglevel: info
      localmspid: supplychainMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
    
    consensus:
      name: raft

    storage:
      storageclassname: supplychainsc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://54.210.44.10:8200
      role: vault-role
      authpath: localsupplychain-auth
      secretprefix: secretsv2/data/crypto/ordererOrganizations/supplychain/orderers/orderer1.supplychain
      imagesecretname: regcred
      serviceaccountname: vault-auth

    proxy:
      provider: none
      external_url_suffix: bank.com

    genesis: |-
      CiIaIPT7VR8mewOc5SFSOMAAELlv8KEO2YGO8CUWhIGwHWd+EpZxCpNxCpBxCngKWggBEAEaBgjF
      6NOlBiIKc3lzY2hhbm5lbCpAZTM1ZjliYjBkNTI2NWVmYjVjNmI0ODlmOGI1ZDg1ODMwOGRjMjJl
      YmFmZGFkMjczODA4ZTk2ODcwNzY1ZmVlNRIaEhibitjhT4EHHMihzabqbIy7GPivRJhiSugSk3AK
      kHASjXASpyoKB09yZGVyZXISmyoSrhYKDnN1cHBseWNoYWluTVNQEpsWGqcUCgNNU1ASnxQSlBQS
      kRQKDnN1cHBseWNoYWluTVNQEukFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrREND
      QVo2Z0F3SUJBZ0lVWUVDajBVTXBJL21Yem9LekJhdVNPSWt1SU9Zd0NnWUlLb1pJemowRUF3SXcK
      V2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dU
      Rzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1emRYQndi
      SGxqYUdGcGJqQWVGdzB5Ck16QTNNVGN3TnpRd016TmFGdzB5TmpBMU1EWXdOelF3TXpOYU1Gb3hD
      ekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZi
      bVJ2YmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFWApNQlVHQTFVRUF3d09ZMkV1YzNWd2NHeDVZ
      MmhoYVc0d1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBVHNQWUxrR2dCOU8wSkE1
      RS95STJONzlYcmJHZFl6MWtpeFdhcEE5aHJoamZ4cE8vQXhsOElia1VZeEhpTFoKZXpBV3NpTnJU
      Z1I3TDAwZkxzUHpSVVFTbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgov
      d1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVtczVLdUFHclB3bE5SQjFWcW43YVZmQUlyV2t3Q2dZSUtv
      Wkl6ajBFCkF3SURTQUF3UlFJZ1c0TlJ1MXFYL09lRFNvQTV0dGI3cDJUOVVVRktGTHgzV3RuNXd6
      TVE2K3dDSVFEWERob0IKbExMSVVVdmJYWXlGblU1RG82SXZ4ZEkrOE1xZXBzNy9meWhuanc9PQot
      LS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiKWCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpN
      SUlDMWpDQ0FueWdBd0lCQWdJVVpwWTJEUTJKekxFaDZpV2owR2dDRnZCOGVWSXdDZ1lJS29aSXpq
      MEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0Ex
      VUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allT
      NXpkWEJ3YkhsamFHRnBiakFlRncweQpNekEzTVRjd056UTNNREJhRncweU5EQTNNVFl3TnpVeU1E
      QmFNR2d4Q3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIy
      NWtiMjR4RURBT0JnTlZCQW9UQjA5eVpHVnlaWEl4RGpBTUJnTlYKQkFzVEJXRmtiV2x1TVJvd0dB
      WURWUVFEREJGQlpHMXBia0J6ZFhCd2JIbGphR0ZwYmpCWk1CTUdCeXFHU000OQpBZ0VHQ0NxR1NN
      NDlBd0VIQTBJQUJHbXVGL3B6bmZETENDTDNZZXRuM2pZd0FKN3BDc1hMRU1haEdnaEdqTlBIClJG
      TGxpVlpWNC9PanNPK3lNVTRTZW96QmlwUHE4cGNwQjRVU1ZUWnhaaXVqZ2dFUU1JSUJEREFPQmdO
      VkhROEIKQWY4RUJBTUNCNEF3REFZRFZSMFRBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVUyYnpIWlE0
      aGx1RFdDWUVaRGNSVQpFNTQvRmNVd0h3WURWUjBqQkJnd0ZvQVVtczVLdUFHclB3bE5SQjFWcW43
      YVZmQUlyV2t3SkFZRFZSMFJCQjB3Ckc0SVpZMkV0ZEc5dmJITXROMkkzTldabVptTmtPUzEyY3pR
      ME9UQ0JoUVlJS2dNRUJRWUhDQUVFZVhzaVlYUjAKY25NaU9uc2lZV0poWXk1cGJtbDBJam9pZEhK
      MVpTSXNJbUZrYldsdUlqb2lkSEoxWlNJc0ltaG1Ma0ZtWm1scwphV0YwYVc5dUlqb2lJaXdpYUdZ
      dVJXNXliMnhzYldWdWRFbEVJam9pUVdSdGFXNUFjM1Z3Y0d4NVkyaGhhVzRpCkxDSm9aaTVVZVhC
      bElqb2lZV1J0YVc0aWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSVRuaFJFczM0disKd0d0
      RUc3WENCWjFPdEdOdFV4Nm9EenN1NzNLZ1VpVzJBaUFuSHJjUW9CbFdLZUhVQ3R1T0xrTHViaElX
      cGpndQorbXgvQ1UwT3UvaGliUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KQg4KBFNIQTIS
      BlNIQTI1NkrpBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK0RDQ0FaNmdBd0lCQWdJ
      VVlFQ2owVU1wSS9tWHpvS3pCYXVTT0lrdUlPWXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFV
      RUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJB
      d0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNXpkWEJ3YkhsamFHRnBiakFl
      RncweQpNekEzTVRjd056UXdNek5hRncweU5qQTFNRFl3TnpRd016TmFNRm94Q3pBSkJnTlZCQVlU
      QWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRH
      QTFVRUNnd0hUM0prWlhKbGNqRVgKTUJVR0ExVUVBd3dPWTJFdWMzVndjR3g1WTJoaGFXNHdXVEFU
      QmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVRzUFlMa0dnQjlPMEpBNUUveUkyTjc5WHJi
      R2RZejFraXhXYXBBOWhyaGpmeHBPL0F4bDhJYmtVWXhIaUxaCmV6QVdzaU5yVGdSN0wwMGZMc1B6
      UlVRU28wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFk
      QmdOVkhRNEVGZ1FVbXM1S3VBR3JQd2xOUkIxVnFuN2FWZkFJcldrd0NnWUlLb1pJemowRQpBd0lE
      U0FBd1JRSWdXNE5SdTFxWC9PZURTb0E1dHRiN3AyVDlVVUZLRkx4M1d0bjV3ek1RNit3Q0lRRFhE
      aG9CCmxMTElVVXZiWFl5Rm5VNURvNkl2eGRJKzhNcWVwczcvZnlobmp3PT0KLS0tLS1FTkQgQ0VS
      VElGSUNBVEUtLS0tLQoaBkFkbWlucyI4CgZBZG1pbnMSLhIkCAESIBIIEgYIARICCAAaFBISCg5z
      dXBwbHljaGFpbk1TUBABGgZBZG1pbnMiOwoLRW5kb3JzZW1lbnQSLBIiCAESHhIIEgYIARICCAAa
      EhIQCg5zdXBwbHljaGFpbk1TUBoGQWRtaW5zIjcKB1JlYWRlcnMSLBIiCAESHhIIEgYIARICCAAa
      EhIQCg5zdXBwbHljaGFpbk1TUBoGQWRtaW5zIjcKB1dyaXRlcnMSLBIiCAESHhIIEgYIARICCAAa
      EhIQCg5zdXBwbHljaGFpbk1TUBoGQWRtaW5zKgZBZG1pbnMaJAoMQ2FwYWJpbGl0aWVzEhQSCgoI
      CgRWMl8wEgAaBkFkbWlucxq8EQoNQ29uc2Vuc3VzVHlwZRKqERKfEQoIZXRjZHJhZnQSkhEK+xAK
      FG9yZGVyZXIxLnN1cHBseWNoYWluEIo3Gq4ILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1J
      SUM2VENDQXBDZ0F3SUJBZ0lVWjRiaGpsTjByRkNzb3VrMG9xdXZ0R0VtY0Fzd0NnWUlLb1pJemow
      RUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFV
      RUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1
      emRYQndiSGxqYUdGcGJqQWVGdzB5Ck16QTNNVGN3TnpRM01EQmFGdzB5TkRBM01UWXdOelV5TURC
      YU1HMHhDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1
      a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhFREFPQmdOVgpCQXNUQjI5eVpHVnlaWEl4SFRB
      YkJnTlZCQU1URkc5eVpHVnlaWEl4TG5OMWNIQnNlV05vWVdsdU1Ga3dFd1lICktvWkl6ajBDQVFZ
      SUtvWkl6ajBEQVFjRFFnQUVxYXloOVpmVE9aZnkxS1hrWHVkMUJKNlB0V1VlR3A3bCsvTzUKQzB2
      TVhzaE5pY0xLaXJhTU1mZXhxVEhDNm1BTk0yWVF0Zjc5bUQxVlZTVlNybVBONktPQ0FSOHdnZ0Vi
      TUE0RwpBMVVkRHdFQi93UUVBd0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lC
      QlFVSEF3SXdEQVlEClZSMFRBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVlbTJ0RTNxaTd4elhDRHRE
      eHVTU1dvVVlHOFl3SHdZRFZSMGoKQkJnd0ZvQVVtczVLdUFHclB3bE5SQjFWcW43YVZmQUlyV2t3
      TWdZRFZSMFJCQ3N3S1lJVWIzSmtaWEpsY2pFdQpjM1Z3Y0d4NVkyaGhhVzZDRVc5eVpHVnlaWEl4
      TG1KaGJtc3VZMjl0TUdnR0NDb0RCQVVHQndnQkJGeDdJbUYwCmRISnpJanA3SW1obUxrRm1abWxz
      YVdGMGFXOXVJam9pSWl3aWFHWXVSVzV5YjJ4c2JXVnVkRWxFSWpvaWIzSmsKWlhKbGNqRXVjM1Z3
      Y0d4NVkyaGhhVzRpTENKb1ppNVVlWEJsSWpvaWIzSmtaWEpsY2lKOWZUQUtCZ2dxaGtqTwpQUVFE
      QWdOSEFEQkVBaUExYXQwaks5d2Z1THYvZ3huOURNcmR6dzVWME1hamdXUGd0WUFKQ0I2V2FRSWdm
      UjFyClJqV1FXd0xIeVI0T0hUWG5MbUdnQ3pmakxGOHEzVTZzMG05U1pBWT0KLS0tLS1FTkQgQ0VS
      VElGSUNBVEUtLS0tLQoirggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzZUQ0NBcENn
      QXdJQkFnSVVaNGJoamxOMHJGQ3NvdWswb3F1dnRHRW1jQXN3Q2dZSUtvWkl6ajBFQXdJdwpXakVM
      TUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVa
      Rzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzV6ZFhCd2JIbGph
      R0ZwYmpBZUZ3MHkKTXpBM01UY3dOelEzTURCYUZ3MHlOREEzTVRZd056VXlNREJhTUcweEN6QUpC
      Z05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9C
      Z05WQkFvVEIwOXlaR1Z5WlhJeEVEQU9CZ05WCkJBc1RCMjl5WkdWeVpYSXhIVEFiQmdOVkJBTVRG
      Rzl5WkdWeVpYSXhMbk4xY0hCc2VXTm9ZV2x1TUZrd0V3WUgKS29aSXpqMENBUVlJS29aSXpqMERB
      UWNEUWdBRXFheWg5WmZUT1pmeTFLWGtYdWQxQko2UHRXVWVHcDdsKy9PNQpDMHZNWHNoTmljTEtp
      cmFNTWZleHFUSEM2bUFOTTJZUXRmNzltRDFWVlNWU3JtUE42S09DQVI4d2dnRWJNQTRHCkExVWRE
      d0VCL3dRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RB
      WUQKVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWVtMnRFM3FpN3h6WENEdER4dVNTV29VWUc4
      WXdId1lEVlIwagpCQmd3Rm9BVW1zNUt1QUdyUHdsTlJCMVZxbjdhVmZBSXJXa3dNZ1lEVlIwUkJD
      c3dLWUlVYjNKa1pYSmxjakV1CmMzVndjR3g1WTJoaGFXNkNFVzl5WkdWeVpYSXhMbUpoYm1zdVky
      OXRNR2dHQ0NvREJBVUdCd2dCQkZ4N0ltRjAKZEhKeklqcDdJbWhtTGtGbVptbHNhV0YwYVc5dUlq
      b2lJaXdpYUdZdVJXNXliMnhzYldWdWRFbEVJam9pYjNKawpaWEpsY2pFdWMzVndjR3g1WTJoaGFX
      NGlMQ0pvWmk1VWVYQmxJam9pYjNKa1pYSmxjaUo5ZlRBS0JnZ3Foa2pPClBRUURBZ05IQURCRUFp
      QTFhdDBqSzl3ZnVMdi9neG45RE1yZHp3NVYwTWFqZ1dQZ3RZQUpDQjZXYVFJZ2ZSMXIKUmpXUVd3
      TEh5UjRPSFRYbkxtR2dDemZqTEY4cTNVNnMwbTlTWkFZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0t
      LS0tChISCgU1MDBtcxAKGAEgBSiAgIAIGgZBZG1pbnMaIgoJQmF0Y2hTaXplEhUSCwgKEICAgDEY
      gIBAGgZBZG1pbnMaHgoMQmF0Y2hUaW1lb3V0Eg4SBAoCMnMaBkFkbWlucxofChNDaGFubmVsUmVz
      dHJpY3Rpb25zEggaBkFkbWlucyIiCgZBZG1pbnMSGBIOCAMSCgoGQWRtaW5zEAIaBkFkbWlucyIq
      Cg9CbG9ja1ZhbGlkYXRpb24SFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zIiIKB1JlYWRlcnMSFxIN
      CAMSCQoHUmVhZGVycxoGQWRtaW5zIiIKB1dyaXRlcnMSFxINCAMSCQoHV3JpdGVycxoGQWRtaW5z
      KgZBZG1pbnMSo0MKC0NvbnNvcnRpdW1zEpNDEshCChVTdXBwbHlDaGFpbkNvbnNvcnRpdW0SrkIS
      lBYKCGljaWNpTVNQEocWGukTCgNNU1AS4RMS1hMS0xMKCGljaWNpTVNQEtEFLS0tLS1CRUdJTiBD
      RVJUSUZJQ0FURS0tLS0tCk1JSUI2RENDQVk2Z0F3SUJBZ0lVYmdBLzZuREdoYk04NHZtZEJTZ09j
      SlQ5RlBFd0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOQmdOVkJBZ01C
      bHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdObwpNUTR3REFZRFZRUUtEQVZKWTJsamFURVJN
      QThHQTFVRUF3d0lZMkV1YVdOcFkya3dIaGNOTWpNd056RTNNRGMwCk1UUTVXaGNOTWpZd05UQTJN
      RGMwTVRRNVdqQlNNUXN3Q1FZRFZRUUdFd0pEU0RFUE1BMEdBMVVFQ0F3R1duVnkKYVdOb01ROHdE
      UVlEVlFRSERBWmFkWEpwWTJneERqQU1CZ05WQkFvTUJVbGphV05wTVJFd0R3WURWUVFEREFoagpZ
      UzVwWTJsamFUQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJKMFZQNExrWWE5ZTVF
      NUQ1UzFRCmFsR1FHUzJuWFQwRTFINEpHVWl2aFlwS2NiSFNuRUVjSDB1aTlJaG83VlVHYVlZbnh5
      NUdtS3ByWHB0b3FXdTYKM0FPalFqQkFNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEZ1lEVlIwUEFR
      SC9CQVFEQWdHbU1CMEdBMVVkRGdRVwpCQlExek10amVHRHg3em1sNjBmTVd2dUVUK1ZwTkRBS0Jn
      Z3Foa2pPUFFRREFnTklBREJGQWlFQTllNnowLzM0CmZSK1V1aUJ4VU5xQXJVb0lCcnRSbGhWQ1Z5
      T3hXc0d0M2xjQ0lERGo1ZUtFaitYUW1ZUzdGN3Fvb0xBQUpEeVEKclovYkcxSENUQ2d6bW9FYgot
      LS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiKOCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpN
      SUlDMFRDQ0FuZWdBd0lCQWdJVUdnb2NVTTdmR1R0VmNCUmQwQ1R0OHRWQTdXRXdDZ1lJS29aSXpq
      MEVBd0l3ClVqRUxNQWtHQTFVRUJoTUNRMGd4RHpBTkJnTlZCQWdNQmxwMWNtbGphREVQTUEwR0Ex
      VUVCd3dHV25WeWFXTm8KTVE0d0RBWURWUVFLREFWSlkybGphVEVSTUE4R0ExVUVBd3dJWTJFdWFX
      TnBZMmt3SGhjTk1qTXdOekUzTURjMApPVEF3V2hjTk1qUXdOekUyTURjMU5EQXdXakJ0TVFzd0NR
      WURWUVFHRXdKRFNERWFNQmdHQTFVRUJ4TVJORGN1Ck16Z3ZPQzQxTkM5YWRYSnBZMmd4RGpBTUJn
      TlZCQW9UQlVsamFXTnBNUnd3REFZRFZRUUxFd1ZoWkcxcGJqQU0KQmdOVkJBc1RCV2xqYVdOcE1S
      UXdFZ1lEVlFRRERBdEJaRzFwYmtCcFkybGphVEJaTUJNR0J5cUdTTTQ5QWdFRwpDQ3FHU000OUF3
      RUhBMElBQkNhWTh3M1YxWUJJUHpnR1VvQVVjSmJtY2pSNCtqeDlscWpwWkYrV0VZRkRwM2J0CnR2
      MmpvWENVSW5FSytjTGVpZ0x0aFQvNFN0eVluT0ExZkpMTWVYS2pnZ0VPTUlJQkNqQU9CZ05WSFE4
      QkFmOEUKQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVTY3NEsxK3h0N3VO
      MEcyMW5zaUhoZHdSSApuNEF3SHdZRFZSMGpCQmd3Rm9BVU5jekxZM2hnOGU4NXBldEh6RnI3aEUv
      bGFUUXdJd1lEVlIwUkJCd3dHb0lZClkyRXRkRzl2YkhNdE9UazRZbUkxT1RkaUxXNW1kemR1TUlH
      RUJnZ3FBd1FGQmdjSUFRUjRleUpoZEhSeWN5STYKZXlKaFltRmpMbWx1YVhRaU9pSjBjblZsSWl3
      aVlXUnRhVzRpT2lKMGNuVmxJaXdpYUdZdVFXWm1hV3hwWVhScApiMjRpT2lKcFkybGphU0lzSW1o
      bUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWtGa2JXbHVRR2xqYVdOcElpd2lhR1l1ClZIbHdaU0k2SW1G
      a2JXbHVJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFEQWp2ellJSWJ1alkyTzJacWsKWHM2
      WU1vRTdZWHIyUG1DcUpRQzdML3F1SkFJZ1psTE5zNlgzcTNHNVBKYzdMVE5CYkRmMWJDcHZ6eE1K
      ZlVSZApuTWcwVURvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK
      0QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjZEQ0NBWTZnQXdJQkFnSVViZ0EvNm5E
      R2hiTTg0dm1kQlNnT2NKVDlGUEV3Q2dZSUtvWkl6ajBFQXdJdwpVakVMTUFrR0ExVUVCaE1DUTBn
      eER6QU5CZ05WQkFnTUJscDFjbWxqYURFUE1BMEdBMVVFQnd3R1duVnlhV05vCk1RNHdEQVlEVlFR
      S0RBVkpZMmxqYVRFUk1BOEdBMVVFQXd3SVkyRXVhV05wWTJrd0hoY05Nak13TnpFM01EYzAKTVRR
      NVdoY05Nall3TlRBMk1EYzBNVFE1V2pCU01Rc3dDUVlEVlFRR0V3SkRTREVQTUEwR0ExVUVDQXdH
      V25WeQphV05vTVE4d0RRWURWUVFIREFaYWRYSnBZMmd4RGpBTUJnTlZCQW9NQlVsamFXTnBNUkV3
      RHdZRFZRUUREQWhqCllTNXBZMmxqYVRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElB
      QkowVlA0TGtZYTllNUU1RDVTMVEKYWxHUUdTMm5YVDBFMUg0SkdVaXZoWXBLY2JIU25FRWNIMHVp
      OUlobzdWVUdhWVlueHk1R21LcHJYcHRvcVd1NgozQU9qUWpCQU1BOEdBMVVkRXdFQi93UUZNQU1C
      QWY4d0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWREZ1FXCkJCUTF6TXRqZUdEeDd6bWw2MGZN
      V3Z1RVQrVnBOREFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBOWU2ejAvMzQKZlIrVXVpQnhVTnFB
      clVvSUJydFJsaFZDVnlPeFdzR3QzbGNDSUREajVlS0VqK1hRbVlTN0Y3cW9vTEFBSkR5UQpyWi9i
      RzFIQ1RDZ3ptb0ViCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KGgZBZG1pbnMiMgoGQWRtaW5z
      EigSHggBEhoSCBIGCAESAggAGg4SDAoIaWNpY2lNU1AQARoGQWRtaW5zIjcKC0VuZG9yc2VtZW50
      EigSHggBEhoSCBIGCAESAggAGg4SDAoIaWNpY2lNU1AQAxoGQWRtaW5zIlsKB1JlYWRlcnMSUBJG
      CAESQhIQEg4IARICCAASAggBEgIIAhoOEgwKCGljaWNpTVNQEAEaDhIMCghpY2ljaU1TUBADGg4S
      DAoIaWNpY2lNU1AQAhoGQWRtaW5zIkcKB1dyaXRlcnMSPBIyCAESLhIMEgoIARICCAASAggBGg4S
      DAoIaWNpY2lNU1AQARoOEgwKCGljaWNpTVNQEAIaBkFkbWlucyoGQWRtaW5zEuEVCgZzYmlNU1AS
      1hUaxhMKA01TUBK+ExKzExKwEwoGc2JpTVNQEskFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
      Ck1JSUI0RENDQVlhZ0F3SUJBZ0lVR2NLOC9SeW5LR3FjTjlXVUQxZXB4SjFLTnhvd0NnWUlLb1pJ
      emowRUF3SXcKVGpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBH
      QTFVRUJ3d0dURzl1Wkc5dQpNUXd3Q2dZRFZRUUtEQU5UWW1reER6QU5CZ05WQkFNTUJtTmhMbk5p
      YVRBZUZ3MHlNekEzTVRjd056UXpNRFphCkZ3MHlOakExTURZd056UXpNRFphTUU0eEN6QUpCZ05W
      QkFZVEFrZENNUTh3RFFZRFZRUUlEQVpNYjI1a2IyNHgKRHpBTkJnTlZCQWNNQmt4dmJtUnZiakVN
      TUFvR0ExVUVDZ3dEVTJKcE1ROHdEUVlEVlFRRERBWmpZUzV6WW1rdwpXVEFUQmdjcWhrak9QUUlC
      QmdncWhrak9QUU1CQndOQ0FBUTNYVHIzWlkzakRpVkNLVERMVnhQUHRFMS9XMFBXClJLaU5XQk15
      Q21oaE0wVWd2L3NZTDdqUXovdkVXSzZldHB1UEdORmpFRlN1ZnlXU1JBWjFaaCtIbzBJd1FEQVAK
      QmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIvd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVy
      Z3BRSUVvZApvVVN3RytPWEc1Wk0vUitwdFdvd0NnWUlLb1pJemowRUF3SURTQUF3UlFJZ1pGU2g3
      ckNMUVl2cW9MbnJUcUZVCnFXT0ZidE1LVWNvak1Iam5FZy82MUFVQ0lRRDRSQm9tZlk1M2RyWWhq
      ZDZhdUJaRlpKdkVUdnpJeGhhY3dRbUMKdFF2Y0tRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0t
      LQoi/QctLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQ3hEQ0NBbXVnQXdJQkFnSVVTV1po
      OGM2K1V1SGJCRktrbElFdC91V3pYUkF3Q2dZSUtvWkl6ajBFQXdJdwpUakVMTUFrR0ExVUVCaE1D
      UjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1Rd3dDZ1lE
      VlFRS0RBTlRZbWt4RHpBTkJnTlZCQU1NQm1OaExuTmlhVEFlRncweU16QTNNVGN3TnpVd01EQmEK
      RncweU5EQTNNVFl3TnpVMU1EQmFNR2d4Q3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEVlFRSEV4STFN
      UzQxTUM4dApNQzR4TXk5TWIyNWtiMjR4RERBS0JnTlZCQW9UQTFOaWFURWFNQXdHQTFVRUN4TUZZ
      V1J0YVc0d0NnWURWUVFMCkV3TnpZbWt4RWpBUUJnTlZCQU1NQ1VGa2JXbHVRSE5pYVRCWk1CTUdC
      eXFHU000OUFnRUdDQ3FHU000OUF3RUgKQTBJQUJGK2kwWjhaUXF1SkFCVVF0Ymhja1l0MDRQdXdW
      WThzY2RrUFVEVFdFVW9ETFBWQXdKSThndGNYeUlUagpqWERVcTJiWGc3UXFyU1lPem1CUUt5Smtz
      UjJqZ2dFTE1JSUJCekFPQmdOVkhROEJBZjhFQkFNQ0I0QXdEQVlEClZSMFRBUUgvQkFJd0FEQWRC
      Z05WSFE0RUZnUVV6UytoRjZiVDl5WUpQZG9kRExsb1V4cXlpK1l3SHdZRFZSMGoKQkJnd0ZvQVVy
      Z3BRSUVvZG9VU3dHK09YRzVaTS9SK3B0V293SkFZRFZSMFJCQjB3RzRJWlkyRXRkRzl2YkhNdApO
      VFEyTm1ZM05qbGtOQzFpTlhGcU1qQ0JnQVlJS2dNRUJRWUhDQUVFZEhzaVlYUjBjbk1pT25zaVlX
      SmhZeTVwCmJtbDBJam9pZEhKMVpTSXNJbUZrYldsdUlqb2lkSEoxWlNJc0ltaG1Ma0ZtWm1sc2FX
      RjBhVzl1SWpvaWMySnAKSWl3aWFHWXVSVzV5YjJ4c2JXVnVkRWxFSWpvaVFXUnRhVzVBYzJKcElp
      d2lhR1l1Vkhsd1pTSTZJbUZrYldsdQpJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUQ1eTdp
      ZHAzUTFGNC9VRU5Mem8yYk9DWktVYlhid1NnRE1XCmo0NGI5bVBHQWlCSEdaMUZrUTNWdGlLTEVu
      R3N6bkxqZ3ZZcXV6Q2k1OWNNVGhFaG1tbkt5QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
      Qg4KBFNIQTISBlNIQTI1NkrJBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCNERDQ0FZ
      YWdBd0lCQWdJVUdjSzgvUnluS0dxY045V1VEMWVweEoxS054b3dDZ1lJS29aSXpqMEVBd0l3ClRq
      RUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5
      dVpHOXUKTVF3d0NnWURWUVFLREFOVFlta3hEekFOQmdOVkJBTU1CbU5oTG5OaWFUQWVGdzB5TXpB
      M01UY3dOelF6TURaYQpGdzB5TmpBMU1EWXdOelF6TURaYU1FNHhDekFKQmdOVkJBWVRBa2RDTVE4
      d0RRWURWUVFJREFaTWIyNWtiMjR4CkR6QU5CZ05WQkFjTUJreHZibVJ2YmpFTU1Bb0dBMVVFQ2d3
      RFUySnBNUTh3RFFZRFZRUUREQVpqWVM1ellta3cKV1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFN
      QkJ3TkNBQVEzWFRyM1pZM2pEaVZDS1RETFZ4UFB0RTEvVzBQVwpSS2lOV0JNeUNtaGhNMFVndi9z
      WUw3alF6L3ZFV0s2ZXRwdVBHTkZqRUZTdWZ5V1NSQVoxWmgrSG8wSXdRREFQCkJnTlZIUk1CQWY4
      RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVcmdwUUlFb2QKb1VT
      d0crT1hHNVpNL1IrcHRXb3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWdaRlNoN3JDTFFZdnFvTG5y
      VHFGVQpxV09GYnRNS1Vjb2pNSGpuRWcvNjFBVUNJUUQ0UkJvbWZZNTNkclloamQ2YXVCWkZaSnZF
      VHZ6SXhoYWN3UW1DCnRRdmNLUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KGgZBZG1pbnMi
      MAoGQWRtaW5zEiYSHAgBEhgSCBIGCAESAggAGgwSCgoGc2JpTVNQEAEaBkFkbWlucyI1CgtFbmRv
      cnNlbWVudBImEhwIARIYEggSBggBEgIIABoMEgoKBnNiaU1TUBADGgZBZG1pbnMiVQoHUmVhZGVy
      cxJKEkAIARI8EhASDggBEgIIABICCAESAggCGgwSCgoGc2JpTVNQEAEaDBIKCgZzYmlNU1AQAxoM
      EgoKBnNiaU1TUBACGgZBZG1pbnMiQwoHV3JpdGVycxI4Ei4IARIqEgwSCggBEgIIABICCAEaDBIK
      CgZzYmlNU1AQARoMEgoKBnNiaU1TUBACGgZBZG1pbnMqBkFkbWlucxLVFQoGcmJpTVNQEsoVGroT
      CgNNU1ASshMSpxMSpBMKBnJiaU1TUBLFBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlC
      M3pDQ0FZYWdBd0lCQWdJVVVWT25Zakc5RW50MFh5UjNCYkY2VXBHSHh4c3dDZ1lJS29aSXpqMEVB
      d0l3ClRqRUxNQWtHQTFVRUJoTUNRMGd4RHpBTkJnTlZCQWdNQmxwMWNtbGphREVQTUEwR0ExVUVC
      d3dHV25WeWFXTm8KTVF3d0NnWURWUVFLREFOU1lta3hEekFOQmdOVkJBTU1CbU5oTG5KaWFUQWVG
      dzB5TXpBM01UY3dOelEwTWpSYQpGdzB5TmpBMU1EWXdOelEwTWpSYU1FNHhDekFKQmdOVkJBWVRB
      a05JTVE4d0RRWURWUVFJREFaYWRYSnBZMmd4CkR6QU5CZ05WQkFjTUJscDFjbWxqYURFTU1Bb0dB
      MVVFQ2d3RFVtSnBNUTh3RFFZRFZRUUREQVpqWVM1eVlta3cKV1RBVEJnY3Foa2pPUFFJQkJnZ3Fo
      a2pPUFFNQkJ3TkNBQVNzSEliZlcrVmY2VWRZSmVwTFFEVkowUFlqSm9vdwoydnBCdVk1MlhTdnB4
      ZzJYd0wxWTJwYU1tT3RTWG95bllpWVdxMWdkaTVkZWxKQ0djd1Vta1JyMW8wSXdRREFQCkJnTlZI
      Uk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVa2NuSCtY
      dGkKV3BibnJqTWUyMzFLbk9JRmNPMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdVVUVhYmpiM3ZK
      aGZFMktXOFFBNQp5dGtFOWU1amd6VzBkRVl2ZldpUm1iZ0NJRitaRm8vdkhtSWlEUXZVbzlUb1Y5
      ZWVmdGNJeHFiN3lrK1BKNXRaClhveW0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoi+QctLS0t
      LUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQ3dqQ0NBbW1nQXdJQkFnSVVJL2N6Z05Hc3cvektM
      S3hKcEI4TXNoU3ZqaTB3Q2dZSUtvWkl6ajBFQXdJdwpUakVMTUFrR0ExVUVCaE1DUTBneER6QU5C
      Z05WQkFnTUJscDFjbWxqYURFUE1BMEdBMVVFQnd3R1duVnlhV05vCk1Rd3dDZ1lEVlFRS0RBTlNZ
      bWt4RHpBTkJnTlZCQU1NQm1OaExuSmlhVEFlRncweU16QTNNVGN3TnpVeU1EQmEKRncweU5EQTNN
      VFl3TnpVM01EQmFNR2N4Q3pBSkJnTlZCQVlUQWtOSU1Sb3dHQVlEVlFRSEV4RTBOeTR6T0M4NApM
      alUwTDFwMWNtbGphREVNTUFvR0ExVUVDaE1EVW1KcE1Sb3dEQVlEVlFRTEV3VmhaRzFwYmpBS0Jn
      TlZCQXNUCkEzSmlhVEVTTUJBR0ExVUVBd3dKUVdSdGFXNUFjbUpwTUZrd0V3WUhLb1pJemowQ0FR
      WUlLb1pJemowREFRY0QKUWdBRWp5d25RM2ZNSlFFVnhhVU1VTHdCKzh0NnpOTVBlaFM3LytWNEdY
      RnZueFFEWnZlQzBzWGYwM3RVUk5rQgozdHhITk9iZ21LT1hkMXhGc3d2TkFzcm5lNk9DQVFvd2dn
      RUdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WCkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRV0JC
      UVNHdzlQYjhyTGtseXJ1dllOeUJxTFF3WVJOREFmQmdOVkhTTUUKR0RBV2dCU1J5Y2Y1ZTJKYWx1
      ZXVNeDdiZlVxYzRnVnc3VEFqQmdOVkhSRUVIREFhZ2hoallTMTBiMjlzY3kxawpObU0zTkRkak9E
      Z3RlbTV5Y0hnd2dZQUdDQ29EQkFVR0J3Z0JCSFI3SW1GMGRISnpJanA3SW1GaVlXTXVhVzVwCmRD
      STZJblJ5ZFdVaUxDSmhaRzFwYmlJNkluUnlkV1VpTENKb1ppNUJabVpwYkdsaGRHbHZiaUk2SW5K
      aWFTSXMKSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWtGa2JXbHVRSEppYVNJc0ltaG1MbFI1Y0dV
      aU9pSmhaRzFwYmlKOQpmVEFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUIrdDdzSjlteXJFK3pKY2RT
      bTRuS2tzWjVnc05iUGtiRzhyeFh3Cm9lVEVFd0lnQjFhaVpEZUh6eTRFeFFoVlZSK3dhWitlVnFK
      eTdEc1NrT1Z4eVJVM2ZZMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQpCDgoEU0hBMhIGU0hB
      MjU2SsUFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIzekNDQVlhZ0F3SUJBZ0lVVVZP
      bllqRzlFbnQwWHlSM0JiRjZVcEdIeHhzd0NnWUlLb1pJemowRUF3SXcKVGpFTE1Ba0dBMVVFQmhN
      Q1EwZ3hEekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdObwpNUXd3Q2dZ
      RFZRUUtEQU5TWW1reER6QU5CZ05WQkFNTUJtTmhMbkppYVRBZUZ3MHlNekEzTVRjd056UTBNalJh
      CkZ3MHlOakExTURZd056UTBNalJhTUU0eEN6QUpCZ05WQkFZVEFrTklNUTh3RFFZRFZRUUlEQVph
      ZFhKcFkyZ3gKRHpBTkJnTlZCQWNNQmxwMWNtbGphREVNTUFvR0ExVUVDZ3dEVW1KcE1ROHdEUVlE
      VlFRRERBWmpZUzV5WW1rdwpXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBU3NISWJm
      VytWZjZVZFlKZXBMUURWSjBQWWpKb293CjJ2cEJ1WTUyWFN2cHhnMlh3TDFZMnBhTW1PdFNYb3lu
      WWlZV3ExZ2RpNWRlbEpDR2N3VW1rUnIxbzBJd1FEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRH
      QTFVZER3RUIvd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVrY25IK1h0aQpXcGJucmpNZTIzMUtuT0lG
      Y08wd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ1VVRWFiamIzdkpoZkUyS1c4UUE1Cnl0a0U5ZTVq
      Z3pXMGRFWXZmV2lSbWJnQ0lGK1pGby92SG1JaURRdlVvOVRvVjllZWZ0Y0l4cWI3eWsrUEo1dFoK
      WG95bQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChoGQWRtaW5zIjAKBkFkbWlucxImEhwIARIY
      EggSBggBEgIIABoMEgoKBnJiaU1TUBABGgZBZG1pbnMiNQoLRW5kb3JzZW1lbnQSJhIcCAESGBII
      EgYIARICCAAaDBIKCgZyYmlNU1AQAxoGQWRtaW5zIlUKB1JlYWRlcnMSShJACAESPBIQEg4IARIC
      CAASAggBEgIIAhoMEgoKBnJiaU1TUBABGgwSCgoGcmJpTVNQEAMaDBIKCgZyYmlNU1AQAhoGQWRt
      aW5zIkMKB1dyaXRlcnMSOBIuCAESKhIMEgoIARICCAASAggBGgwSCgoGcmJpTVNQEAEaDBIKCgZy
      YmlNU1AQAhoGQWRtaW5zKgZBZG1pbnMaQAoVQ2hhbm5lbENyZWF0aW9uUG9saWN5EicSDAgDEggK
      BkFkbWlucxoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMqFy9DaGFubmVsL09yZGVyZXIvQWRtaW5z
      Ii0KBkFkbWlucxIjEggIARIEEgISABoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMqFy9DaGFubmVs
      L09yZGVyZXIvQWRtaW5zGiYKEEhhc2hpbmdBbGdvcml0aG0SEhIICgZTSEEyNTYaBkFkbWlucxot
      ChlCbG9ja0RhdGFIYXNoaW5nU3RydWN0dXJlEhASBgj/////DxoGQWRtaW5zGkoKEE9yZGVyZXJB
      ZGRyZXNzZXMSNhIbChlvcmRlcmVyMS5zdXBwbHljaGFpbjo3MDUwGhcvQ2hhbm5lbC9PcmRlcmVy
      L0FkbWlucxokCgxDYXBhYmlsaXRpZXMSFBIKCggKBFYyXzASABoGQWRtaW5zIiIKB1JlYWRlcnMS
      FxINCAMSCQoHUmVhZGVycxoGQWRtaW5zIiIKB1dyaXRlcnMSFxINCAMSCQoHV3JpdGVycxoGQWRt
      aW5zIiIKBkFkbWlucxIYEg4IAxIKCgZBZG1pbnMQAhoGQWRtaW5zKgZBZG1pbnMaDgoECgIKAAoA
      CgAKAAoA

    config:
      pod:
        resources:
          limits:
            memory: 512M
            cpu: 1
          requests:
            memory: 512M
            cpu: 0.5
